safebench folder structure:
    agent:
        contains agent specific configs such as driving models
    gym_carla:
        the main file is env_wrapper, for each round (parallel agents) we create a VectorWrapper.
        in __init__ function, it creates n environments. each env is an ObservationWrapper object
        (defined in the same file). each ObservationWrapper adds some functions to gym.carla core.
        the gym-carla core is a gym-style core for carla defined in ./envs/carla_env.py

        envs/carla_env.py:
        todo
    scenario:
        config:
            scenario_types:
                specifies all in-scenario parameters, scenario_id, route_id in each scenario

        scenario_data:
            route:
                waypoints in routes and map name are defined for each scenario
                scenarios:
                    in this folder there is a file for each scenario, defining trigger points
                    for actors
            scenic_data:
                maps:
                    maps raw data for visualization

        scenario_definition:
            for each scenario there is a folder describing scenario behaviour by code
            route_scenrio:
                1- the manager of one running scenario
                2- checks whether the episode has finished

        scenario_manager:
            carla_data_provider.py:
                This module provides all frequently used data from CARLA via local buffers to avoid blocking calls to CARLA


    carla_runner.py:
        1- start point
        2- handling multiple agents and scenarios
        3- assign carla env variables


common tasks:
    for adding scenario:
        1- duplicate .yaml file in safebench/scenario/config
        2- duplicate .json in safebench/scenario/config/scenario_type
        3- duplicate a folder in safebench/scenario/scenario_definition and use needed classes
        (provided class should be consistent with names in folder safebench/scenario/scenario_data/route/scenarios )
        4- add a scenario policy to .\scenario\__init__.py

    map view:
        1- maps are located in safebench/scenario/scenario_data/scenic_data/maps
        2- you can use this link for view: https://odrviewer.io/
        (note that the y-axis was negated!!!)


tools in tools folder:
    viualizing the routes:
        1- change directory to tools/CarlaScenariosBuilder
        2- read Readme.md in this directory
        3- command:  python visualize_routes.py --save_dir ./route --scenario 1
        (note that the y-axis was negated!!!)

    create route visualy:
        python create_routes.py [arguments]
        results goes in scenario_origin folder as a .npy file
        (needed map names to be added get_map_center function)

    create scenarios visualy:
        results goes in scenario_origin folder as a .npy file

        then export scenarios to safebench
        (need some lines to be commented under todo)
        (should disable rotation in export_route file)
        then copy results to safebench/scenario/scenario_data/route


common issues:
    if episode ends quickly:
        1- add --max_episode_step 2000 argument to run command
        2- increase timeout in scenario defenition class